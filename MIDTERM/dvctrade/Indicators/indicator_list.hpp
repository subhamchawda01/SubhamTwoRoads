/**  \file
Indicators/indicator_list.hpp
   List of includes for indicators, to be crearted in model_creator.cpp

   \author: (c) Copyright Two Roads Technological Solutions Pvt Ltd 2011
   Address:
   Suite No 353, Evoma, #14, Bhattarhalli,
   Old Madras Road, Near Garden City College,
   KR Puram, Bangalore 560049, India
   +91 80 4190 3551
*/
#pragma once
#include "dvctrade/Indicators/adaptive_moving_average.hpp"
#include "dvctrade/Indicators/aggressive_party_price.hpp"
#include "dvctrade/Indicators/avg_abs_trend.hpp"
#include "dvctrade/Indicators/contract_term.hpp"
#include "dvctrade/Indicators/corr_based_simple_trend.hpp"
#include "dvctrade/Indicators/corr_ratio_calculator.hpp"
#include "dvctrade/Indicators/dynamic_weight_port_trend.hpp"
#include "dvctrade/Indicators/ema_crossover.hpp"
#include "dvctrade/Indicators/exponential_moving_average.hpp"
#include "dvctrade/Indicators/l1_bid_ask_size_flow.hpp"
#include "dvctrade/Indicators/l1_bid_ask_size_flow_mini.hpp"
#include "dvctrade/Indicators/l1_book_change.hpp"
#include "dvctrade/Indicators/l1_order_trend.hpp"
#include "dvctrade/Indicators/l1_price.hpp"
#include "dvctrade/Indicators/l1_size_trend.hpp"
#include "dvctrade/Indicators/moving_avg_trade_size.hpp"
#include "dvctrade/Indicators/normalized_stable_scaled_trend.hpp"
#include "dvctrade/Indicators/offline_computed_pairs_dynamic_weight_port.hpp"
#include "dvctrade/Indicators/offline_price_pair_diff.hpp"
#include "dvctrade/Indicators/pca_deviation_pairs_port.hpp"
#include "dvctrade/Indicators/portfolio_price.hpp"
#include "dvctrade/Indicators/price_portfolio.hpp"
#include "dvctrade/Indicators/projected_price_const_pairs.hpp"
#include "dvctrade/Indicators/projected_price_pairs.hpp"
#include "dvctrade/Indicators/projected_pricetype_const_pairs.hpp"
#include "dvctrade/Indicators/projected_pricetype_pairs.hpp"
#include "dvctrade/Indicators/recent_scaled_volume_calculator.hpp"
#include "dvctrade/Indicators/recent_simple_events_measure.hpp"
#include "dvctrade/Indicators/recent_simple_trades_measure.hpp"
#include "dvctrade/Indicators/recent_simple_volume_measure.hpp"
#include "dvctrade/Indicators/returns_based_projected_price.hpp"
#include "dvctrade/Indicators/returns_stdev.hpp"
#include "dvctrade/Indicators/scaled_trend.hpp"
#include "dvctrade/Indicators/scaled_trend_mktevents.hpp"
#include "dvctrade/Indicators/scaled_trend_mktevents_port.hpp"
#include "dvctrade/Indicators/scaled_trend_port.hpp"
#include "dvctrade/Indicators/second_derivative.hpp"
#include "dvctrade/Indicators/simple_hawkes_price_process_mkt_events.hpp"
#include "dvctrade/Indicators/simple_hawkes_price_process_tr_events.hpp"
#include "dvctrade/Indicators/simple_mean.hpp"
#include "dvctrade/Indicators/simple_price_trend.hpp"
#include "dvctrade/Indicators/simple_returns.hpp"
#include "dvctrade/Indicators/simple_returns_mktevents.hpp"
#include "dvctrade/Indicators/simple_trend.hpp"
#include "dvctrade/Indicators/simple_trend_indep_mktevents.hpp"
#include "dvctrade/Indicators/simple_trend_mktevents.hpp"
#include "dvctrade/Indicators/simple_trend_mktevents_port.hpp"
#include "dvctrade/Indicators/simple_trend_port.hpp"
#include "dvctrade/Indicators/size_weighted_trade_price_crossover.hpp"
#include "dvctrade/Indicators/slow_beta_calculator.hpp"
#include "dvctrade/Indicators/slow_corr_calculator.hpp"
#include "dvctrade/Indicators/slow_stdev_calculator.hpp"
#include "dvctrade/Indicators/slow_stdev_calculator_port.hpp"
#include "dvctrade/Indicators/slow_stdev_returns_calculator.hpp"
#include "dvctrade/Indicators/slow_stdev_trend_calculator.hpp"
#include "dvctrade/Indicators/spread_pricing.hpp"
#include "dvctrade/Indicators/stable_scaled_trend.hpp"
#include "dvctrade/Indicators/stable_scaled_trend_2.hpp"
#include "dvctrade/Indicators/stable_scaled_trend_port.hpp"
#include "dvctrade/Indicators/stable_scaled_trend_version2.hpp"
#include "dvctrade/Indicators/stable_scaled_trend_version2_mktevents.hpp"
#include "dvctrade/Indicators/stable_scaled_trend_version2_mktevents_port.hpp"
#include "dvctrade/Indicators/stable_scaled_trend_version2_port.hpp"
#include "dvctrade/Indicators/stdev_adjusted_returns_diff.hpp"
#include "dvctrade/Indicators/stdev_adjusted_returns_diff_norm.hpp"
#include "dvctrade/Indicators/stdev_adjusted_returns_diff_port.hpp"
#include "dvctrade/Indicators/stdev_ratio_calculator.hpp"
#include "dvctrade/Indicators/stdev_ratio_normalised.hpp"
#include "dvctrade/Indicators/stdev_simple_returns.hpp"
#include "dvctrade/Indicators/stdev_simple_trend.hpp"
#include "dvctrade/Indicators/stdev_weighted_source_self_trend.hpp"
#include "dvctrade/Indicators/stud_price_diff.hpp"
#include "dvctrade/Indicators/stud_price_diff_mktevents.hpp"
#include "dvctrade/Indicators/stud_price_diff_port.hpp"
#include "dvctrade/Indicators/stud_price_returns_diff.hpp"
#include "dvctrade/Indicators/stud_price_returns_diff_port.hpp"
#include "dvctrade/Indicators/stud_price_trend_diff.hpp"
#include "dvctrade/Indicators/stud_price_trend_diff_dynamic_weight_port.hpp"
#include "dvctrade/Indicators/stud_price_trend_diff_port.hpp"
#include "dvctrade/Indicators/trade_adjusted_simple_trend.hpp"
#include "dvctrade/Indicators/trend_reversal.hpp"
#include "dvctrade/Indicators/trend_reversal_mktevents.hpp"
#include "dvctrade/Indicators/trend_starting.hpp"
#include "dvctrade/Indicators/volume_pca_deviation_pairs_port.hpp"
#include "dvctrade/Indicators/volume_pca_deviation_pairs_port2.hpp"
#include "dvctrade/Indicators/volume_pca_deviation_pairs_port_mktevents.hpp"
#include "dvctrade/Indicators/volume_ratio_adjusted_spdiff.hpp"
#include "dvctrade/Indicators/volume_ratio_calculator.hpp"
#include "dvctrade/Indicators/volume_ratio_calculator_port2.hpp"
#include "dvctrade/Indicators/volume_traded.hpp"
#include "dvctrade/Indicators/volume_weighted_price.hpp"
#include "dvctrade/Indicators/volume_weighted_scaled_trend.hpp"
#include "dvctrade/Indicators/volume_weighted_scaled_trend_mktevents.hpp"
#include "dvctrade/Indicators/volume_weighted_scaled_trend_port.hpp"
#include "dvctrade/Indicators/volume_weighted_simple_trend.hpp"
#include "dvctrade/Indicators/volume_weighted_simple_trend_mktevents.hpp"
#include "dvctrade/Indicators/volume_weighted_simple_trend_port.hpp"
#include "dvctrade/Indicators/volume_weighted_stud_price_returns_diff.hpp"
#include "dvctrade/Indicators/vx_stdev_adjusted_simple_trend.hpp"

#include "dvctrade/Indicators/cmvf_l1_price.hpp"
#include "dvctrade/Indicators/l1_port_price.hpp"
#include "dvctrade/Indicators/mean_normalized_diff.hpp"
#include "dvctrade/Indicators/moore_penrose.hpp"
#include "dvctrade/Indicators/moore_penrose_fx_sf.hpp"
#include "dvctrade/Indicators/portfolio_deviation.hpp"
#include "dvctrade/Indicators/price_normalized_returns_stdev.hpp"
#include "dvctrade/Indicators/price_normalized_returns_trend.hpp"
#include "dvctrade/Indicators/returns_simple_trend.hpp"
#include "dvctrade/Indicators/sg_mg_tr_regime.hpp"
#include "dvctrade/Indicators/simple_returns_mktevents_port.hpp"
#include "dvctrade/Indicators/simple_returns_port.hpp"
#include "dvctrade/Indicators/smooth_trend.hpp"
#include "dvctrade/Indicators/smooth_zscore.hpp"
#include "dvctrade/Indicators/spot_future_spread.hpp"
#include "dvctrade/Indicators/stable_ask_spot_future_spread.hpp"
#include "dvctrade/Indicators/stable_bid_spot_future_spread.hpp"
#include "dvctrade/Indicators/tod_tom_norm_spread.hpp"
#include "dvctrade/Indicators/usdx_price.hpp"
#include "dvctrade/Indicators/yb_simple_trend.hpp"

#include "dvctrade/Indicators/implied_vol_price.hpp"
#include "dvctrade/Indicators/kalman_trade_price.hpp"
#include "dvctrade/Indicators/spread_implied_vol_price.hpp"
#include "dvctrade/Indicators/vx_spot_price.hpp"

// Book based
#include "dvctrade/Indicators/bid_ask_to_pay.hpp"
#include "dvctrade/Indicators/bid_ask_to_pay_cutoff.hpp"
#include "dvctrade/Indicators/bid_ask_to_pay_cutoff_l1.hpp"
#include "dvctrade/Indicators/bid_ask_to_pay_generalized.hpp"
#include "dvctrade/Indicators/bid_ask_to_pay_generalized_all_lvls.hpp"
#include "dvctrade/Indicators/bid_ask_to_pay_l1.hpp"
#include "dvctrade/Indicators/bid_ask_to_pay_notional.hpp"
#include "dvctrade/Indicators/bid_ask_to_pay_notional_dynamic_sd.hpp"
#include "dvctrade/Indicators/book_order_cdiff.hpp"
#include "dvctrade/Indicators/book_order_diff.hpp"
#include "dvctrade/Indicators/book_size.hpp"
#include "dvctrade/Indicators/book_size_diff.hpp"
#include "dvctrade/Indicators/decayed_complex_book_generalized.hpp"
#include "dvctrade/Indicators/diff_pair_price_type.hpp"
#include "dvctrade/Indicators/diff_price_ebs.hpp"
#include "dvctrade/Indicators/diff_price_l1.hpp"
#include "dvctrade/Indicators/diff_price_type.hpp"
#include "dvctrade/Indicators/diff_price_type_spread.hpp"
#include "dvctrade/Indicators/dynamic_price_l1.hpp"
#include "dvctrade/Indicators/event_owp_diff_price_l1.hpp"
#include "dvctrade/Indicators/level_order_size.hpp"
#include "dvctrade/Indicators/level_size.hpp"
#include "dvctrade/Indicators/level_size_per_order.hpp"
#include "dvctrade/Indicators/mult_mid_order_price.hpp"
#include "dvctrade/Indicators/mult_mid_price.hpp"
#include "dvctrade/Indicators/mult_mkt_complex_order_price.hpp"
#include "dvctrade/Indicators/mult_mkt_complex_price.hpp"
#include "dvctrade/Indicators/mult_mkt_complex_price_short_avg.hpp"
#include "dvctrade/Indicators/mult_mkt_complex_price_topoff.hpp"
#include "dvctrade/Indicators/mult_mkt_order_price.hpp"
#include "dvctrade/Indicators/mult_mkt_order_price_topoff.hpp"
#include "dvctrade/Indicators/mult_mkt_per_order_complex_price.hpp"
#include "dvctrade/Indicators/mult_mkt_price.hpp"
#include "dvctrade/Indicators/orderw_bp_momentum.hpp"
#include "dvctrade/Indicators/orderw_bp_momentum_2.hpp"
#include "dvctrade/Indicators/ors_self_exec.hpp"
#include "dvctrade/Indicators/ors_self_exec_recent_orders.hpp"
#include "dvctrade/Indicators/ors_self_exec_recent_orders_td.hpp"
#include "dvctrade/Indicators/ors_self_exec_td.hpp"
#include "dvctrade/Indicators/owp_diff_price_l1.hpp"
#include "dvctrade/Indicators/simple_book.hpp"
#include "dvctrade/Indicators/sizew_bp_momentum.hpp"
#include "dvctrade/Indicators/sizew_bp_momentum_2.hpp"
#include "dvctrade/Indicators/time_owp_diff_price_l1.hpp"
#include "dvctrade/Indicators/valuew_bp_momentum.hpp"
#include "dvctrade/Indicators/valuew_bp_momentum_2.hpp"
// composite indicators x.book + y.price
#include "dvctrade/Indicators/trade_book_adjusted_price.hpp"
// Online Computed BETA based
#include "dvctrade/Indicators/online_beta.hpp"
#include "dvctrade/Indicators/online_beta_computed_pairs.hpp"
#include "dvctrade/Indicators/online_beta_kalman.hpp"
#include "dvctrade/Indicators/online_beta_trend.hpp"
#include "dvctrade/Indicators/online_computed_cutoff_pair.hpp"
#include "dvctrade/Indicators/online_computed_cutoff_pair_mktevents.hpp"
#include "dvctrade/Indicators/online_computed_cutoff_pair_mktevents_port.hpp"
#include "dvctrade/Indicators/online_computed_cutoff_pair_port.hpp"
#include "dvctrade/Indicators/online_computed_negatively_correlated_cutoff_pair.hpp"
#include "dvctrade/Indicators/online_computed_negatively_correlated_cutoff_pair_mktevents.hpp"
#include "dvctrade/Indicators/online_computed_negatively_correlated_pair.hpp"
#include "dvctrade/Indicators/online_computed_negatively_correlated_pair_mktevents.hpp"
#include "dvctrade/Indicators/online_computed_negatively_correlated_pair_mktevents_port.hpp"
#include "dvctrade/Indicators/online_computed_negatively_correlated_pair_port.hpp"
#include "dvctrade/Indicators/online_computed_negatively_correlated_pairs.hpp"
#include "dvctrade/Indicators/online_computed_negatively_correlated_pairs_mktevents.hpp"
#include "dvctrade/Indicators/online_computed_negatively_correlated_pairs_mktevents_port.hpp"
#include "dvctrade/Indicators/online_computed_negatively_correlated_pairs_port.hpp"
#include "dvctrade/Indicators/online_computed_pair.hpp"
#include "dvctrade/Indicators/online_computed_pair_mktevents.hpp"
#include "dvctrade/Indicators/online_computed_pair_mktevents_port.hpp"
#include "dvctrade/Indicators/online_computed_pair_port.hpp"
#include "dvctrade/Indicators/online_computed_pair_port2.hpp"
#include "dvctrade/Indicators/online_computed_pairs.hpp"
#include "dvctrade/Indicators/online_computed_pairs_mktevents.hpp"
#include "dvctrade/Indicators/online_computed_pairs_mktevents_port.hpp"
#include "dvctrade/Indicators/online_computed_pairs_port.hpp"
#include "dvctrade/Indicators/online_corradjusted_diff_pairs.hpp"
#include "dvctrade/Indicators/online_diff_pairs.hpp"
#include "dvctrade/Indicators/online_diff_pairs_NK.hpp"
#include "dvctrade/Indicators/online_ratio_pairs.hpp"
#include "dvctrade/Indicators/online_ratio_pairs_filter.hpp"
#include "dvctrade/Indicators/online_ratio_pairs_mktevents.hpp"
#include "dvctrade/Indicators/online_ratio_pairs_mktevents_port.hpp"  // not safe
#include "dvctrade/Indicators/online_ratio_pairs_port.hpp"            // not safe
#include "dvctrade/Indicators/online_ratio_projected_price.hpp"
#include "dvctrade/Indicators/online_ratio_projected_price_diff.hpp"

// BETA based
#include "dvctrade/Indicators/mult_based_delta.hpp"
#include "dvctrade/Indicators/notional_based_lead_lag.hpp"
#include "dvctrade/Indicators/notional_traded.hpp"
#include "dvctrade/Indicators/off_port_returns.hpp"
#include "dvctrade/Indicators/offline_breakout_adjusted_pairs.hpp"
#include "dvctrade/Indicators/offline_breakout_adjusted_pairs_2.hpp"
#include "dvctrade/Indicators/offline_breakout_adjusted_pairs_port.hpp"
#include "dvctrade/Indicators/offline_breakout_adjusted_pairs_port_2.hpp"
#include "dvctrade/Indicators/offline_breakout_adjusted_pairs_trend.hpp"
#include "dvctrade/Indicators/offline_computed_cutoff_pairs.hpp"
#include "dvctrade/Indicators/offline_computed_cutoff_pairs_mktevents.hpp"
#include "dvctrade/Indicators/offline_computed_cutoff_pairs_mktevents_port.hpp"
#include "dvctrade/Indicators/offline_computed_cutoff_pairs_port.hpp"
#include "dvctrade/Indicators/offline_computed_pairs.hpp"
#include "dvctrade/Indicators/offline_computed_pairs_mktevents.hpp"
#include "dvctrade/Indicators/offline_computed_pairs_mktevents2.hpp"
#include "dvctrade/Indicators/offline_computed_pairs_mktevents_port.hpp"
#include "dvctrade/Indicators/offline_computed_pairs_port.hpp"
#include "dvctrade/Indicators/offline_computed_returns_cutoff_pairs.hpp"
#include "dvctrade/Indicators/offline_computed_returns_cutoff_pairs_mktevents.hpp"
#include "dvctrade/Indicators/offline_computed_returns_cutoff_pairs_mktevents_port.hpp"
#include "dvctrade/Indicators/offline_computed_returns_cutoff_pairs_port.hpp"
#include "dvctrade/Indicators/offline_computed_returns_pairs.hpp"
#include "dvctrade/Indicators/offline_computed_returns_pairs_mktevents.hpp"
#include "dvctrade/Indicators/offline_computed_returns_pairs_mktevents_port.hpp"
#include "dvctrade/Indicators/offline_computed_returns_pairs_port.hpp"
#include "dvctrade/Indicators/offline_computed_self_cutoff_pairs.hpp"
#include "dvctrade/Indicators/offline_computed_self_cutoff_pairs_port.hpp"
#include "dvctrade/Indicators/offline_computed_serban.hpp"
#include "dvctrade/Indicators/offline_computed_serban_port.hpp"
#include "dvctrade/Indicators/offline_computed_smart_cutoff_pairs.hpp"
#include "dvctrade/Indicators/offline_computed_source_cutoff_pairs.hpp"
#include "dvctrade/Indicators/offline_computed_source_cutoff_pairs_port.hpp"
#include "dvctrade/Indicators/offline_computed_volume_adjusted_pairs.hpp"
#include "dvctrade/Indicators/offline_computed_volume_adjusted_pairs_mktevents.hpp"
#include "dvctrade/Indicators/offline_corradjusted_cutoff_pairs.hpp"
#include "dvctrade/Indicators/offline_corradjusted_cutoff_pairs_port.hpp"
#include "dvctrade/Indicators/offline_corradjusted_pairs.hpp"
#include "dvctrade/Indicators/offline_corradjusted_pairs_mktevents.hpp"
#include "dvctrade/Indicators/offline_corradjusted_pairs_mktevents_port.hpp"
#include "dvctrade/Indicators/offline_corradjusted_pairs_normalized_combo.hpp"
#include "dvctrade/Indicators/offline_corradjusted_pairs_port.hpp"
#include "dvctrade/Indicators/offline_corradjusted_serban.hpp"
#include "dvctrade/Indicators/offline_corradjusted_serban_port.hpp"
#include "dvctrade/Indicators/offline_low_correlation_pairs.hpp"
#include "dvctrade/Indicators/offline_low_correlation_pairs_port.hpp"
#include "dvctrade/Indicators/offline_volume_corradjusted_pairs.hpp"
#include "dvctrade/Indicators/offline_volume_corradjusted_pairs_mktevents.hpp"
#include "dvctrade/Indicators/pcr_port_returns.hpp"
#include "dvctrade/Indicators/regime_slope.hpp"
#include "dvctrade/Indicators/regime_stats_diff.hpp"
#include "dvctrade/Indicators/returns_beta_computed_pairs.hpp"
#include "dvctrade/Indicators/returns_beta_computed_pairs_mktevents.hpp"
#include "dvctrade/Indicators/returns_beta_computed_serban.hpp"
#include "dvctrade/Indicators/simple_trend_regime.hpp"
#include "dvctrade/Indicators/ta_offline_corradjusted_pairs.hpp"
#include "dvctrade/Indicators/trend_based_regime.hpp"
#include "dvctrade/Indicators/trend_vol_based_regime.hpp"
#include "dvctrade/Indicators/trend_vol_based_regime_port.hpp"

// trade based
// time decayed
#include "dvctrade/Indicators/comb_td_sum_tdiff_fsize.hpp"
#include "dvctrade/Indicators/comb_td_sum_tdiff_fsize_lvl.hpp"
#include "dvctrade/Indicators/comb_td_sum_tdiff_fsqrtsize.hpp"
#include "dvctrade/Indicators/comb_td_sum_tdiff_sqrtfsqrtsize.hpp"
#include "dvctrade/Indicators/diff_tdavg_tpx_basepx.hpp"
#include "dvctrade/Indicators/diff_tdsizeavg_tpx_basepx.hpp"
#include "dvctrade/Indicators/sizew_diff_tdsizeavg_tpx_basepx.hpp"
#include "dvctrade/Indicators/sqrt_tsize_tdavg_tdiff.hpp"
#include "dvctrade/Indicators/sqrt_tsize_tdavg_tdiff_lvl.hpp"
#include "dvctrade/Indicators/td_lvlsum_ttype.hpp"
#include "dvctrade/Indicators/td_lvlsum_ttype_sqrt_tsize.hpp"
#include "dvctrade/Indicators/td_sizeavg_ttype_st_trend.hpp"
#include "dvctrade/Indicators/td_sum_hvlbtdiff_tsize.hpp"
#include "dvctrade/Indicators/td_sum_lbtdiff_tsize.hpp"
#include "dvctrade/Indicators/td_sum_tdiff_fsize.hpp"
#include "dvctrade/Indicators/td_sum_tdiff_fsize_lvl.hpp"
#include "dvctrade/Indicators/td_sum_tdiff_fsqrtsize.hpp"
#include "dvctrade/Indicators/td_sum_tdiff_lvl_fsqrtsize.hpp"
#include "dvctrade/Indicators/td_sum_tdiff_nsize.hpp"
#include "dvctrade/Indicators/td_sum_tdiff_sqrt_tsize.hpp"
#include "dvctrade/Indicators/td_sum_tdiff_sqrtfsqrtsize.hpp"
#include "dvctrade/Indicators/td_sum_tdiff_tsize.hpp"
#include "dvctrade/Indicators/td_sum_tradeflow.hpp"
#include "dvctrade/Indicators/td_sum_ttype.hpp"
#include "dvctrade/Indicators/td_sum_ttype_sqrt_tsize.hpp"
#include "dvctrade/Indicators/td_sum_ttype_tsize.hpp"
#include "dvctrade/Indicators/tsize_tdavg_tdiff.hpp"
#include "dvctrade/Indicators/tsize_tdavg_tdiff_lvl.hpp"
#include "dvctrade/Indicators/tsize_tdsqrtavg_tdiff.hpp"
#include "dvctrade/Indicators/tsize_tdsqrtavg_tdiff_lvl.hpp"

/// level sensitive time decayed
#include "dvctrade/Indicators/diff_tdavg_tpx_basepx_lvl.hpp"
#include "dvctrade/Indicators/diff_tdavg_tpx_basepx_onelvl.hpp"
#include "dvctrade/Indicators/diff_tdsizeavg_tpx_basepx_lvl.hpp"
#include "dvctrade/Indicators/diff_tdsizeavg_tpx_basepx_onelvl.hpp"
#include "dvctrade/Indicators/td_sum_tdiff_fsize_onelvl.hpp"
#include "dvctrade/Indicators/td_sum_tdiff_nsize_lvl.hpp"
#include "dvctrade/Indicators/td_sum_tdiff_nsize_onelvl.hpp"
#include "dvctrade/Indicators/td_sum_tdiff_tsize_lvl.hpp"
#include "dvctrade/Indicators/td_sum_tdiff_tsize_onelvl.hpp"

// trade decayed
#include "dvctrade/Indicators/diff_tdsize_l1size_ratio.hpp"
#include "dvctrade/Indicators/diff_travg_tpx_basepx.hpp"
#include "dvctrade/Indicators/diff_trsizeavg_tpx_basepx.hpp"
#include "dvctrade/Indicators/positioning.hpp"
#include "dvctrade/Indicators/sqrt_tsize_travg_tdiff.hpp"
#include "dvctrade/Indicators/tr_avg_tdiff_sqrt_tsize_volfactor.hpp"
#include "dvctrade/Indicators/tr_sum_tdiff_fsize.hpp"
#include "dvctrade/Indicators/tr_sum_tdiff_fsqrtsize.hpp"
#include "dvctrade/Indicators/tr_sum_tdiff_nsize.hpp"
#include "dvctrade/Indicators/tr_sum_tdiff_sqrt_tsize.hpp"
#include "dvctrade/Indicators/tr_sum_tdiff_sqrtfsqrtsize.hpp"
#include "dvctrade/Indicators/tr_sum_tdiff_tsize.hpp"
#include "dvctrade/Indicators/tr_sum_tprice_tsize.hpp"
#include "dvctrade/Indicators/tr_sum_ttype.hpp"
#include "dvctrade/Indicators/tr_sum_ttype_tsize.hpp"
#include "dvctrade/Indicators/tsize_travg_tdiff.hpp"
#include "dvctrade/Indicators/tsize_trsqrtavg_tdiff.hpp"

/// level sensitive trade decayed
#include "dvctrade/Indicators/tr_sum_tdiff_fsize_lvl.hpp"
#include "dvctrade/Indicators/tr_sum_tdiff_nsize_lvl.hpp"
#include "dvctrade/Indicators/tr_sum_tdiff_tsize_lvl.hpp"

// event decayed
#include "dvctrade/Indicators/diff_edavg_tpx_basepx.hpp"
#include "dvctrade/Indicators/diff_edsizeavg_tpx_basepx.hpp"
#include "dvctrade/Indicators/ed_sum_tdiff_fsize.hpp"
#include "dvctrade/Indicators/ed_sum_tdiff_fsize_lvl.hpp"
#include "dvctrade/Indicators/ed_sum_tdiff_fsqrtsize.hpp"
#include "dvctrade/Indicators/ed_sum_tdiff_nsize.hpp"
#include "dvctrade/Indicators/ed_sum_tdiff_nsize_lvl.hpp"
#include "dvctrade/Indicators/ed_sum_tdiff_sqrt_tsize.hpp"
#include "dvctrade/Indicators/ed_sum_tdiff_sqrtfsqrtsize.hpp"
#include "dvctrade/Indicators/ed_sum_tdiff_tsize.hpp"
#include "dvctrade/Indicators/ed_sum_tdiff_tsize_lvl.hpp"
#include "dvctrade/Indicators/tsize_edsqrtavg_tdiff.hpp"

// ORS based
#include "dvctrade/Indicators/self_position.hpp"
#include "dvctrade/Indicators/self_position_simple_trend.hpp"
#include "dvctrade/Indicators/trend_adjusted_self_position.hpp"

#include "dvctrade/Indicators/implied_price.hpp"
#include "dvctrade/Indicators/implied_price_mps.hpp"
#include "dvctrade/Indicators/implied_price_spread.hpp"

#include "dvctrade/Indicators/di_pricing_indicator.hpp"
#include "dvctrade/Indicators/di_pricing_indicator_mktevents.hpp"

#include "dvctrade/Indicators/di1_curve_vol_adjusted_trend.hpp"

#include "dvctrade/Indicators/di1_curve_adjusted_price.hpp"
#include "dvctrade/Indicators/fra_price.hpp"

#include "dvctrade/Indicators/di1_curve_adjusted_simple_trend.hpp"
#include "dvctrade/Indicators/di1_curve_adjusted_simple_trend_mktevents.hpp"

#include "dvctrade/Indicators/di1_curve_adjusted_simple_trend_mktevents_momentum.hpp"
#include "dvctrade/Indicators/di1_curve_adjusted_simple_trend_momentum.hpp"

#include "dvctrade/Indicators/di1_curve_adjusted_linear_simple_trend.hpp"
#include "dvctrade/Indicators/di1_curve_adjusted_linear_simple_trend_mktevents.hpp"

#include "dvctrade/Indicators/di1_curve_adjusted_linear_simple_trend_mktevents_momentum.hpp"
#include "dvctrade/Indicators/di1_curve_adjusted_linear_simple_trend_momentum.hpp"

#include "dvctrade/Indicators/di1_levered_simple_trend.hpp"
#include "dvctrade/Indicators/di1_levered_simple_trend_mktevents.hpp"

#include "dvctrade/Indicators/curve_adjusted_price.hpp"

#include "dvctrade/Indicators/curve_adjusted_ports.hpp"
#include "dvctrade/Indicators/curve_adjusted_simple_trend.hpp"
#include "dvctrade/Indicators/curve_adjusted_volume_weighted_simple_trend.hpp"

#include "dvctrade/Indicators/curve_adjusted_simple_trend_bond.hpp"
#include "dvctrade/Indicators/curve_adjusted_simple_trend_mktevents.hpp"

#include "dvctrade/Indicators/curve_adjusted_simple_trend_mktevents_momentum.hpp"
#include "dvctrade/Indicators/curve_adjusted_simple_trend_momentum.hpp"
#include "dvctrade/Indicators/curve_adjusted_simple_trend_momentum_bond.hpp"

#include "dvctrade/Indicators/levered_simple_trend.hpp"
#include "dvctrade/Indicators/levered_simple_trend_mktevents.hpp"

#include "dvctrade/Indicators/convex_trend.hpp"
#include "dvctrade/Indicators/convex_trend_port.hpp"

#include "dvctrade/Indicators/convex_positioning.hpp"

#include "dvctrade/Indicators/amplify_level_change.hpp"
#include "dvctrade/Indicators/amplify_level_change_l1.hpp"
#include "dvctrade/Indicators/bollinger_bands.hpp"

#include "dvctrade/Indicators/offline_computed_returns_mult.hpp"
#include "dvctrade/Indicators/simple_spread.hpp"
#include "dvctrade/Indicators/simple_spread_trend.hpp"

#include "dvctrade/Indicators/simple_price_type.hpp"

// Spot Future Pricing
#include "dvctrade/Indicators/future_to_spot_pricing.hpp"
#include "dvctrade/Indicators/index_future_to_spot_pricing.hpp"
#include "dvctrade/Indicators/online_ratio_calculator.hpp"

#include "dvctrade/Indicators/combo_indicator.hpp"
#include "dvctrade/Indicators/common_indicator.hpp"

// Regime Type
#include "dvctrade/Indicators/moving_correlation_cutoff.hpp"
#include "dvctrade/Indicators/regime_DiffPx_Mod_DiffPx.hpp"

#include "dvctrade/Indicators/current_time.hpp"

// Regime Based
#include "dvctrade/Indicators/time_based_regime.hpp"

#include "dvctrade/Indicators/big_trade_pair_impact.hpp"
#include "dvctrade/Indicators/curve_regime.hpp"
#include "dvctrade/Indicators/etf_synthetic_price_diff.hpp"
#include "dvctrade/Indicators/event_based_regime.hpp"
#include "dvctrade/Indicators/event_bias_offline_indicator.hpp"
#include "dvctrade/Indicators/l1_bookbias.hpp"
#include "dvctrade/Indicators/l1_bookbias_regime.hpp"
#include "dvctrade/Indicators/l1_targetbias.hpp"
#include "dvctrade/Indicators/max_moving_correlation.hpp"
#include "dvctrade/Indicators/moving_avg_bidask_spread.hpp"
#include "dvctrade/Indicators/moving_avg_trade_impact.hpp"
#include "dvctrade/Indicators/moving_correlation_cutoff.hpp"
#include "dvctrade/Indicators/online_offline_corr_diff_base_regime.hpp"
#include "dvctrade/Indicators/price_regime.hpp"
#include "dvctrade/Indicators/regime_DiffPx_Mod_DiffPx.hpp"
#include "dvctrade/Indicators/regime_market_making.hpp"
#include "dvctrade/Indicators/regime_online_offline_beta.hpp"
#include "dvctrade/Indicators/regime_online_offline_corr.hpp"
#include "dvctrade/Indicators/regime_online_offline_stdev_ratio.hpp"
#include "dvctrade/Indicators/regime_slow_stdev.hpp"
#include "dvctrade/Indicators/regime_slow_stdev_2.hpp"
#include "dvctrade/Indicators/regime_slow_stdev_trend.hpp"
#include "dvctrade/Indicators/regime_stdev.hpp"
#include "dvctrade/Indicators/regime_vol_stdev.hpp"
#include "dvctrade/Indicators/rolling_l1sz_regime.hpp"
#include "dvctrade/Indicators/scaled_volume_ratio_regime.hpp"
#include "dvctrade/Indicators/size_based_regime.hpp"
#include "dvctrade/Indicators/source_switch_regime_port.hpp"
#include "dvctrade/Indicators/stdev_ratio_regime.hpp"
#include "dvctrade/Indicators/time_based_regime_binary.hpp"
#include "dvctrade/Indicators/traded_ezone_regime_indicator.hpp"
#include "dvctrade/Indicators/trend_switch_regime.hpp"
#include "dvctrade/Indicators/trending_mean_reverting.hpp"
#include "dvctrade/Indicators/volatility_regime.hpp"
#include "dvctrade/Indicators/volume_ratio_regime.hpp"
// Expression Indicator
#include "dvctrade/Indicators/big_trade_volume_version.hpp"
#include "dvctrade/Indicators/expression_indicator.hpp"
// Order Price Feed Based
#include "dvctrade/Indicators/fast_orders_diffpx.hpp"

// Cancellation based

// Features
#include "dvctrade/Indicators/regime_turn_over_rate.hpp"
#include "dvctrade/Indicators/turn_over_rate.hpp"

#include "dvctrade/Indicators/online_implied_yen.hpp"
// Synthetic Index Indicator
#include "dvctrade/Indicators/returns_diff_synthetic_index.hpp"
#include "dvctrade/Indicators/synthetic_index.hpp"

// Options Indicator
#include "dvctrade/Indicators/dynamic_implied_vol_ATM.hpp"
#include "dvctrade/Indicators/implied_vol_calculator.hpp"
#include "dvctrade/Indicators/implied_vol_calculator_spread.hpp"
#include "dvctrade/Indicators/implied_vol_spread.hpp"
#include "dvctrade/Indicators/implied_vol_trend.hpp"
#include "dvctrade/Indicators/moving_average_implied_vol.hpp"
#include "dvctrade/Indicators/moving_avg_bid_ask_ivspread.hpp"
#include "dvctrade/Indicators/moving_avg_price_implied_vol.hpp"
#include "dvctrade/Indicators/options_greek.hpp"
#include "dvctrade/Indicators/options_info.hpp"
#include "dvctrade/Indicators/options_price_bias.hpp"
#include "dvctrade/Indicators/realized_vol_calculator.hpp"
#include "dvctrade/Indicators/vwap_implied_vol.hpp"

#include "dvctrade/Indicators/constant_indicator.hpp"
#include "dvctrade/Indicators/stdev_calculator.hpp"
#include "dvctrade/Indicators/stdev_l1_bias.hpp"

// --------------------------------------Include End ------------------------------
namespace HFSAT {

typedef CommonIndicator *(*CommonIndicatorUniqueInstancePtr)(DebugLogger &, const Watch &,
                                                             const std::vector<const char *> &, PriceType_t);
typedef void (*CommonIndicatorCollectShortCodePtr)(std::vector<std::string> &, std::vector<std::string> &,
                                                   const std::vector<const char *> &);
typedef struct IndicatorStaticFuncStruct {
  CommonIndicatorUniqueInstancePtr unique_instance_ptr_;
  CommonIndicatorCollectShortCodePtr collect_shortcode_ptr_;
  IndicatorStaticFuncStruct(CommonIndicatorUniqueInstancePtr _unique_instance_ptr_,
                            CommonIndicatorCollectShortCodePtr _collect_shortcode_ptr_)
      : unique_instance_ptr_(_unique_instance_ptr_), collect_shortcode_ptr_(_collect_shortcode_ptr_) {}
  IndicatorStaticFuncStruct() {}
} IndicatorStaticFuncStruct_t;

extern std::map<std::string, IndicatorStaticFuncStruct_t> IndicatorMap_Global;
void SetIndicatorListMap();
CommonIndicatorUniqueInstancePtr GetUniqueInstanceFunc(std::string varname_);
CommonIndicatorCollectShortCodePtr CollectShortCodeFunc(std::string varname_);
template <class T>
CommonIndicator *GetUniqueInstanceWrapper(DebugLogger &_dbg_logger_, const Watch &_watch_,
                                          const std::vector<const char *> &_str_, PriceType_t _basepx_pxtype_) {
  return T::GetUniqueInstance(_dbg_logger_, _watch_, _str_, _basepx_pxtype_);
}

bool GetReadinessRequired(const std::string &r_dep_shortcode_, const std::vector<const char *> &tokens_);

std::vector<std::string> GetIndicatorOrder();
}
