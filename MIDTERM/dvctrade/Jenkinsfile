pipeline {
    agent any

    environment {
        WORKDIR="."
        GCC_ROOT="/apps/gcc_versions/gcc-6_3_install"
        CURRENT_BOOST_PATH="/apps/boost/boost-git"
        CURRENT_BOOST_INSTALL_PATH="/apps/boost/boost-install"
        ZLIB_SOURCE="/apps/zlib"
        ZLIB_LIBPATH="/apps/zlib/lib"
        BZIP2_SOURCE="/apps/bzip2"
        BZIP2_LIBPATH="/apps/bzip2/lib"
        BOOST_INCLUDE_DIR="/apps/boost/boost-install/include"
        BOOST_ROOT="/apps/boost/boost-git"
        BOOST_LIB_INSTALL="/apps/boost/boost-install/lib"
        LIBRARY_PATH="/apps/boost/boost-install/lib:/usr/lib/x86_64-linux-gnu"
        LD_RUN_PATH="/apps/boost/boost-install/lib"
        LD_LIBRARY_PATH="/apps/boost/boost-install/lib:/apps/gcc_versions/gcc-6_3_install/lib64:/usr/lib/x86_64-linux-gnu"
        PATH=":/apps/boost/boost-git:/apps/gcc_versions/gcc-6_3_install/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin"
        DVC_ARTIFACTORY='s3://dvc-artifactory'
        SLACK_TOKEN=credentials('slack-token')
    }

    parameters {
      string( defaultValue:'0', description:'', name:'JOB_TRIGGER')
      string( defaultValue:'0', description:'', name:'SKIP_PnL')
    }

    stages {

        stage('Handling First build failure') {
            steps {
                script {
                    if(env.JOB_TRIGGER){
                        echo "No need to initialize"
                    }else{
                        JOB_TRIGGER="0"
                    }
                }
            }
        }

        stage('Build') {
            steps {
                ansiColor('xterm') {
                    sh "/bin/bash -l ./build_scripts/build.sh"
                }
            }
        }

        stage('Run Test') {
            steps {
                sh '/bin/bash -l ./build_scripts/run_test.sh'
            }
        }

        stage('Publish Artifacts') {
            when {
                branch "master"
            }

            steps {
                script {
                    if("${JOB_TRIGGER}"=="0"){
                      result = sh ( script: "git log -1 | grep '\\[skip pnl\\]'", returnStatus: true )
                      echo "${result}"
                      if(result!=0){
                        echo "Performing PnL tests"
                        SKIP_PnL="0"
                      }else{
                        echo "Skipping PnL tests"
                        SKIP_PnL="1"
                      }
                    }
                }
                sh '/bin/bash -l ./build_scripts/publish_artifacts.sh'
                sleep 30

                build job: '../basetrade/devmodel', parameters: [[$class: 'StringParameterValue', name: 'SKIP_PnL', value: "${SKIP_PnL}"],[$class: 'StringParameterValue', name: 'JOB_TRIGGER', value: "1"]], wait:false

            }
        }
    }

    post {
        failure {
            slackSend message: "Build FAILURE: ${env.JOB_NAME} ${env.BUILD_NUMBER} - (<${env.BUILD_URL}|Logs>)", channel: "#ci", token: "${env.SLACK_TOKEN}"
        }
    }
}
