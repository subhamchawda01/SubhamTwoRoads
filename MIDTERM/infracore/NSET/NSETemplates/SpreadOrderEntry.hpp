// =====================================================================================
//
//       Filename:  SpreadOrderEntry.hpp
//
//    Description:
//
//        Version:  1.0
//        Created:  06/29/2015 11:11:05 PM
//       Revision:  none
//       Compiler:  g++
//
//         Author:  (c) Copyright Two Roads Technological Solutions Pvt Ltd 2011
//
//        Address:  Suite No 162, Evoma, #14, Bhattarhalli,
//                  Old Madras Road, Near Garden City College,
//                  KR Puram, Bangalore 560049, India
//          Phone:  +91 80 4190 3551
//
// =====================================================================================

#pragma once

#include "infracore/NSET/NSETemplates/RequestPacket.hpp"
#include "infracore/NSET/NSETemplates/RequestHeader.hpp"
#include "dvccode/CDef/debug_logger.hpp"
#include "infracore/NSET/NSETemplates/DataDefines.hpp"

#define NSE_SPREAD_ORDERENTRY_REQUEST_PARTCIPANTTYPE_OFFSET \
  (NSE_REQUEST_START_OFFSET + NSE_REQUEST_MESSAGE_HEADER_LENGTH + NSE_PACKET_REQUEST_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_PARTCIPANTTYPE_LENGTH sizeof(char)

#define NSE_SPREAD_ORDERENTRY_REQUEST_FILLER_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_PARTCIPANTTYPE_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_PARTCIPANTTYPE_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_FILLER_LENGTH sizeof(char)

#define NSE_SPREAD_ORDERENTRY_REQUEST_COMPETITORPERIOD_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_FILLER_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_FILLER_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_COMPETITORPERIOD_LENGTH sizeof(int16_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_SOLICITORPERIOD_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_COMPETITORPERIOD_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_COMPETITORPERIOD_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_SOLICITORPERIOD_LENGTH sizeof(int16_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_MODIFIED_OR_CANCELLED_BY_FLAG_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_SOLICITORPERIOD_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_SOLICITORPERIOD_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MODIFIED_OR_CANCELLED_BY_FLAG_LENGTH sizeof(char)

#define NSE_SPREAD_ORDERENTRY_REQUEST_RESERVED_2_OFFSET                 \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MODIFIED_OR_CANCELLED_BY_FLAG_OFFSET + \
   NSE_SPREAD_ORDERENTRY_REQUEST_MODIFIED_OR_CANCELLED_BY_FLAG_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_RESERVED_2_LENGTH sizeof(char)

#define NSE_SPREAD_ORDERENTRY_REQUEST_REASONCODE_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_RESERVED_2_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_RESERVED_2_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_REASONCODE_LENGTH sizeof(int16_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_STARTAPLHA_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_REASONCODE_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_REASONCODE_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_STARTAPLHA_LENGTH sizeof(int16_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_ENDAPLHA_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_STARTAPLHA_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_STARTAPLHA_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_ENDAPLHA_LENGTH sizeof(int16_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_TOKENNO_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_ENDAPLHA_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_ENDAPLHA_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_TOKENNO_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_INSTRUMENTNAME_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_TOKENNO_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_TOKENNO_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_INSTRUMENTNAME_LENGTH 6

#define NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_SYMBOL_OFFSET      \
  (NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_INSTRUMENTNAME_OFFSET + \
   NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_INSTRUMENTNAME_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_SYMBOL_LENGTH 10

#define NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_EXPIRYDATE_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_SYMBOL_OFFSET +        \
   NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_SYMBOL_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_EXPIRYDATE_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_STRIKEPRICE_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_EXPIRYDATE_OFFSET +     \
   NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_EXPIRYDATE_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_STRIKEPRICE_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_OPTIONTYPE_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_STRIKEPRICE_OFFSET +   \
   NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_STRIKEPRICE_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_OPTIONTYPE_LENGTH 2

#define NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_CALEVEL_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_OPTIONTYPE_OFFSET + \
   NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_OPTIONTYPE_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_CALEVEL_LENGTH 2

#define NSE_SPREAD_ORDERENTRY_REQUEST_OPBROKERID_OFFSET                \
  (NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_CALEVEL_OFFSET + \
   NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_CALEVEL_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_OPBROKERID_LENGTH 5

#define NSE_SPREAD_ORDERENTRY_REQUEST_FILLER_X_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_OPBROKERID_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_OPBROKERID_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_FILLER_X_LENGTH sizeof(char)

#define NSE_SPREAD_ORDERENTRY_REQUEST_FILLER_OPTIONS_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_FILLER_X_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_FILLER_X_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_FILLER_OPTIONS_LENGTH 3

#define NSE_SPREAD_ORDERENTRY_REQUEST_FILLER_Y_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_FILLER_OPTIONS_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_FILLER_OPTIONS_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_FILLER_Y_LENGTH sizeof(char)

#define NSE_SPREAD_ORDERENTRY_REQUEST_ORDERTYPE_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_FILLER_Y_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_FILLER_Y_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_ORDERTYPE_LENGTH sizeof(int16_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_ORDERNUMBER_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_ORDERTYPE_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_ORDERTYPE_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_ORDERNUMBER_LENGTH sizeof(double)

#define NSE_SPREAD_ORDERENTRY_REQUEST_ACCOUNTNUMBER_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_ORDERNUMBER_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_ORDERNUMBER_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_ACCOUNTNUMBER_LENGTH 10

#define NSE_SPREAD_ORDERENTRY_REQUEST_BOOKTYPE_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_ACCOUNTNUMBER_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_ACCOUNTNUMBER_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_BOOKTYPE_LENGTH sizeof(int16_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_BUYSELLINDICATOR_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_BOOKTYPE_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_BOOKTYPE_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_BUYSELLINDICATOR_LENGTH sizeof(int16_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_DISCLOSEDVOLUME_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_BUYSELLINDICATOR_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_BUYSELLINDICATOR_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_DISCLOSEDVOLUME_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_DISCLOSEDVOLUMEREMAINING_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_DISCLOSEDVOLUME_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_DISCLOSEDVOLUME_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_DISCLOSEDVOLUMEREMAINING_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_TOTALVOLUMEREMAINING_OFFSET  \
  (NSE_SPREAD_ORDERENTRY_REQUEST_DISCLOSEDVOLUMEREMAINING_OFFSET + \
   NSE_SPREAD_ORDERENTRY_REQUEST_DISCLOSEDVOLUMEREMAINING_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_TOTALVOLUMEREMAINING_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_VOLUME_OFFSET            \
  (NSE_SPREAD_ORDERENTRY_REQUEST_TOTALVOLUMEREMAINING_OFFSET + \
   NSE_SPREAD_ORDERENTRY_REQUEST_TOTALVOLUMEREMAINING_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_VOLUME_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_VOLUMEFILLEDTODAY_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_VOLUME_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_VOLUME_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_VOLUMEFILLEDTODAY_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_PRICE_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_VOLUMEFILLEDTODAY_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_VOLUMEFILLEDTODAY_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_PRICE_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_TRIGGERPRICE_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_PRICE_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_PRICE_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_TRIGGERPRICE_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_GOODTILLDATE_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_TRIGGERPRICE_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_TRIGGERPRICE_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_GOODTILLDATE_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_ENTRYDATETIME_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_GOODTILLDATE_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_GOODTILLDATE_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_ENTRYDATETIME_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_MINIMUMFILL_OR_AONVOLUME_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_ENTRYDATETIME_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_ENTRYDATETIME_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MINIMUMFILL_OR_AONVOLUME_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_LASTMODIFIED_OFFSET          \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MINIMUMFILL_OR_AONVOLUME_OFFSET + \
   NSE_SPREAD_ORDERENTRY_REQUEST_MINIMUMFILL_OR_AONVOLUME_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_LASTMODIFIED_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_STORDERFLAGS_STRUCT_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_LASTMODIFIED_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_LASTMODIFIED_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_STORDERFLAGS_STRUCT_LENGTH sizeof(int16_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_BRNACHID_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_STORDERFLAGS_STRUCT_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_STORDERFLAGS_STRUCT_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_BRNACHID_LENGTH sizeof(int16_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_TRADERID_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_BRNACHID_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_BRNACHID_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_TRADERID_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_BROKERID_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_TRADERID_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_TRADERID_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_BROKERID_LENGTH 5

#define NSE_SPREAD_ORDERENTRY_REQUEST_CORDFILLER_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_BROKERID_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_BROKERID_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_CORDFILLER_LENGTH 24

#define NSE_SPREAD_ORDERENTRY_REQUEST_OPENCLOSE_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_CORDFILLER_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_CORDFILLER_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_OPENCLOSE_LENGTH sizeof(char)

#define NSE_SPREAD_ORDERENTRY_REQUEST_SETTLOR_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_OPENCLOSE_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_OPENCLOSE_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_SETTLOR_LENGTH 12

#define NSE_SPREAD_ORDERENTRY_REQUEST_PROCLIENTINDICATOR_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_SETTLOR_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_SETTLOR_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_PROCLIENTINDICATOR_LENGTH sizeof(int16_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_SETTLEMENTPERIOD_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_PROCLIENTINDICATOR_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_PROCLIENTINDICATOR_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_SETTLEMENTPERIOD_LENGTH sizeof(int16_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_ADDITIONALORDERFLAGS_STRUCT_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_SETTLEMENTPERIOD_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_SETTLEMENTPERIOD_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_ADDITIONALORDERFLAGS_STRUCT_LENGTH sizeof(int8_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_GIVENUPFLAG_OFFSET              \
  (NSE_SPREAD_ORDERENTRY_REQUEST_ADDITIONALORDERFLAGS_STRUCT_OFFSET + \
   NSE_SPREAD_ORDERENTRY_REQUEST_ADDITIONALORDERFLAGS_STRUCT_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_GIVENUPFLAG_LENGTH sizeof(char)

#define NSE_SPREAD_ORDERENTRY_REQUEST_FLLERFLAGS_1_TO_8_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_GIVENUPFLAG_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_GIVENUPFLAG_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_FLLERFLAGS_1_TO_8_LENGTH sizeof(int8_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_FLLERFLAGS_9_TO_16_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_FLLERFLAGS_1_TO_8_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_FLLERFLAGS_1_TO_8_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_FLLERFLAGS_9_TO_16_LENGTH sizeof(int8_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_FLLERFLAGS_17_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_FLLERFLAGS_9_TO_16_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_FLLERFLAGS_9_TO_16_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_FLLERFLAGS_17_LENGTH sizeof(int8_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_FLLERFLAGS_18_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_FLLERFLAGS_17_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_FLLERFLAGS_17_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_FLLERFLAGS_18_LENGTH sizeof(int8_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_NFFIELD_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_FLLERFLAGS_18_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_FLLERFLAGS_18_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_NFFIELD_LENGTH sizeof(double)

#define NSE_SPREAD_ORDERENTRY_REQUEST_MKTREPLAY_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_NFFIELD_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_NFFIELD_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MKTREPLAY_LENGTH sizeof(double)

#define NSE_SPREAD_ORDERENTRY_REQUEST_PRICEDIFF_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MKTREPLAY_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_MKTREPLAY_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_PRICEDIFF_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_TOKENNO_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_PRICEDIFF_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_PRICEDIFF_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_TOKENNO_LENGTH 4

#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_INSTRUMENTNAME_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_TOKENNO_OFFSET +                                \
   NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_TOKENNO_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_INSTRUMENTNAME_LENGTH 6

#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_SYMBOL_OFFSET      \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_INSTRUMENTNAME_OFFSET + \
   NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_INSTRUMENTNAME_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_SYMBOL_LENGTH 10

#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_EXPIRYDATE_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_SYMBOL_OFFSET +        \
   NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_SYMBOL_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_EXPIRYDATE_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_STRIKEPRICE_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_EXPIRYDATE_OFFSET +     \
   NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_EXPIRYDATE_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_STRIKEPRICE_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_OPTIONTYPE_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_STRIKEPRICE_OFFSET +   \
   NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_STRIKEPRICE_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_OPTIONTYPE_LENGTH 2

#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_CALEVEL_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_OPTIONTYPE_OFFSET + \
   NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_OPTIONTYPE_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_CALEVEL_LENGTH 2

#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_OPBROKERID_OFFSET                \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_CALEVEL_OFFSET + \
   NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_CALEVEL_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_OPBROKERID_LENGTH 5

#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_FILLER_X_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_OPBROKERID_OFFSET +  \
   NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_OPBROKERID_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_FILLER_X_LENGTH sizeof(char)

#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_ORDERTYPE_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_FILLER_X_OFFSET +     \
   NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_FILLER_X_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_ORDERTYPE_LENGTH sizeof(int16_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_BUYSELLINDICATOR_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_ORDERTYPE_OFFSET +           \
   NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_ORDERTYPE_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_BUYSELLINDICATOR_LENGTH sizeof(int16_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_DISCLOSEDVOLUME_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_BUYSELLINDICATOR_OFFSET +   \
   NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_BUYSELLINDICATOR_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_DISCLOSEDVOLUME_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_DISCLOSEDVOLUMEREMAINING_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_DISCLOSEDVOLUME_OFFSET +             \
   NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_DISCLOSEDVOLUME_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_DISCLOSEDVOLUMEREMAINING_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_TOTALVOLUMEREMAINING_OFFSET  \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_DISCLOSEDVOLUMEREMAINING_OFFSET + \
   NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_DISCLOSEDVOLUMEREMAINING_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_TOTALVOLUMEREMAINING_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_VOLUME_OFFSET            \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_TOTALVOLUMEREMAINING_OFFSET + \
   NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_TOTALVOLUMEREMAINING_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_VOLUME_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_VOLUMEFILLEDTODAY_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_VOLUME_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_VOLUME_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_VOLUMEFILLEDTODAY_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_PRICE_OFFSET          \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_VOLUMEFILLEDTODAY_OFFSET + \
   NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_VOLUMEFILLEDTODAY_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_PRICE_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_TRIGGERPRICE_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_PRICE_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_PRICE_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_TRIGGERPRICE_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_MINIMUMFILL_OR_AONVOLUME_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_TRIGGERPRICE_OFFSET +                \
   NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_TRIGGERPRICE_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_MINIMUMFILL_OR_AONVOLUME_LENGTH sizeof(int32_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_STORDERFLAGS_STRUCT_OFFSET   \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_MINIMUMFILL_OR_AONVOLUME_OFFSET + \
   NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_MINIMUMFILL_OR_AONVOLUME_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_STORDERFLAGS_STRUCT_LENGTH sizeof(int16_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_OPENCLOSE_OFFSET        \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_STORDERFLAGS_STRUCT_OFFSET + \
   NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_STORDERFLAGS_STRUCT_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_OPENCLOSE_LENGTH sizeof(char)

#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_ADDITIONALORDERFLAGS_STRUCT_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_OPENCLOSE_OFFSET +                      \
   NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_OPENCLOSE_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_ADDITIONALORDERFLAGS_STRUCT_LENGTH sizeof(int8_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_GIVENUPFLAG_OFFSET              \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_ADDITIONALORDERFLAGS_STRUCT_OFFSET + \
   NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_ADDITIONALORDERFLAGS_STRUCT_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_GIVENUPFLAG_LENGTH sizeof(char)

#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_FLLERFLAGS_Y_OFFSET \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_GIVENUPFLAG_OFFSET +     \
   NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_GIVENUPFLAG_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_FLLERFLAGS_Y_LENGTH sizeof(int8_t)

#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_3_OFFSET           \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_FLLERFLAGS_Y_OFFSET + \
   NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_FLLERFLAGS_Y_LENGTH)
#define NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_3_LENGTH 80

#define NSE_SPREAD_ORDERENTRY_REQUEST_LENGTH \
  (NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_3_OFFSET + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_3_LENGTH)

namespace HFSAT {
namespace NSE {

class SpreadOrderEntryRequest {
 private:
  char order_entry_request_buffer[NSE_SPREAD_ORDERENTRY_REQUEST_LENGTH];
  char const *msg_ptr;

 private:
  void InitializeStaticFields() {
    //================================= @ Packet

    // Total Length Of The Packet To Be Sent
    SetPacketLength(NSE_SPREAD_ORDERENTRY_REQUEST_LENGTH);

    // Reserved Sequence is always filled with 0
    //    SetPacketReservedSequenceNumber(0);

    // Message Count is 1 as we are only sending one order message
    //    SetPacketMessageCount(1);

    //================================= @ Message Header

    // Login Transaction Code
    SetMessageHeaderTransactionCode(SP_BOARD_LOT_IN);

    // LogTime Shoudl Be Set To 0 While Sending To Exch
    SetMessageHeaderLogTime(0);

    // Alphachar should be set to blank ( ' ' ) while sending to host
    SetMessageHeaderAlphaChar("  ");

    // ErrorCode Should be 0 While Sending To Exch
    SetMessageHeaderErrorCode(0);

    // All TimeStamp Fields Should Be Set To Numeric 0 While Sending To Exch
    memset((void *)(msg_ptr + NSE_REQUEST_MESSAGE_HEADER_TIMESTAMP_OFFSET), 0,
           NSE_REQUEST_MESSAGE_HEADER_TIMESTAMP_LENGTH + NSE_REQUEST_MESSAGE_HEADER_TIMESTAMP1_LENGTH +
               NSE_REQUEST_MESSAGE_HEADER_TIMESTAMP2_LENGTH);

    // Length of the message header and the following order entry request, hence packet length has been deducted
    *((int16_t *)(msg_ptr + NSE_REQUEST_MESSAGE_HEADER_MESSAGELENGTH_OFFSET)) =
        hton16(NSE_SPREAD_ORDERENTRY_REQUEST_LENGTH - NSE_PACKET_REQUEST_LENGTH);

    // ================================ @ Order Entry

    *((int16_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_CALEVEL_OFFSET)) = hton16(0);
    *((int16_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_CALEVEL_OFFSET)) =
        hton16(0);
    memset((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_OPBROKERID_OFFSET), ' ',
           NSE_SPREAD_ORDERENTRY_REQUEST_OPBROKERID_LENGTH);
    memset((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_OPBROKERID_OFFSET), ' ',
           NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_OPBROKERID_LENGTH);
    //        *( ( char * ) ( msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_CLOSEOUTFLAG_OFFSET ) ) = ' ' ;
    memset((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_ORDERTYPE_OFFSET), ' ',
           NSE_SPREAD_ORDERENTRY_REQUEST_ORDERTYPE_LENGTH);
    memset((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_ORDERNUMBER_OFFSET), ' ',
           NSE_SPREAD_ORDERENTRY_REQUEST_ORDERNUMBER_LENGTH);
    memset((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_ACCOUNTNUMBER_OFFSET), ' ',
           NSE_SPREAD_ORDERENTRY_REQUEST_ACCOUNTNUMBER_LENGTH);

    *((int16_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_BOOKTYPE_OFFSET)) = hton16(1);  // regular order
    *((int16_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_STORDERFLAGS_STRUCT_OFFSET)) =
        hton16((int16_t)(1 << 11));  // day order
    *((int16_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_STORDERFLAGS_STRUCT_OFFSET)) =
        hton16((int16_t)(1 << 11));  // day order
    // *((int16_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_BRNACHID_OFFSET)) = hton16(1);
    memset((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_CORDFILLER_OFFSET), ' ',
           NSE_SPREAD_ORDERENTRY_REQUEST_CORDFILLER_LENGTH);
    *((char *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_OPENCLOSE_OFFSET)) = 'O';
    *((char *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_OPENCLOSE_OFFSET)) = 'O';
    memset((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_SETTLOR_OFFSET), ' ',
           NSE_SPREAD_ORDERENTRY_REQUEST_SETTLOR_LENGTH);
    *((int16_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_PROCLIENTINDICATOR_OFFSET)) = hton16(2);
    *((int16_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_SETTLEMENTPERIOD_OFFSET)) = hton16(10);
    *((int8_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_ADDITIONALORDERFLAGS_STRUCT_OFFSET)) = (int8_t)(1 << 1);  // 0
    *((int8_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_ADDITIONALORDERFLAGS_STRUCT_OFFSET)) =
        (int8_t)18;  // 00010010 ( BITS: 000 1 (Self Trade) 00 1 (COD) 0 )
    *((double *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_NFFIELD_OFFSET)) =
        (double)swap_endian((double)111111111111000);  // 00 56 BC 93 84 43 D9 42
  }

 public:
  SpreadOrderEntryRequest() : msg_ptr(order_entry_request_buffer + NSE_REQUEST_START_OFFSET) {
    // Initialize OrderEntry Request Buffer
    memset((void *)order_entry_request_buffer, 0, NSE_SPREAD_ORDERENTRY_REQUEST_LENGTH);

    // Initialize The Static Fields
    InitializeStaticFields();
  }

 private:
  inline void SetPacketLength(int16_t const &packet_length) {
    *((int16_t *)(msg_ptr + NSE_PACKET_LENGTH_OFFSET)) = hton16(packet_length);
  }

  inline void SetPacketSequenceNumber(int32_t const &packet_sequence_number) {
    *((int32_t *)(msg_ptr + NSE_PACKET_SEQUENCE_OFFSET)) = hton32(packet_sequence_number);
  }

  //  inline void SetPacketReservedSequenceNumber(int16_t const &packet_reserved_sequence_number) {
  //    *((int16_t *)(msg_ptr + NSE_PACKET_RESERVED_SEQUENCE_NUMBER_OFFSET)) = hton16(packet_reserved_sequence_number);
  //  }

  inline void SetPacketMD5CheckSum(char const *packet_md5sum_checksum) {
    memcpy((void *)(msg_ptr + NSE_PACKET_CHECKSUM_OFFSET), packet_md5sum_checksum, NSE_PACKET_CHECKSUM_LENGTH);
  }

  //  inline void SetPacketMessageCount(int16_t const &packet_message_count) {
  //    *((int16_t *)(msg_ptr + NSE_PACKET_MESSAGE_COUNT_OFFSET)) = hton16(packet_message_count);
  //  }

  inline void SetMessageHeaderTransactionCode(int16_t const &message_header_transaction_code) {
    *((int16_t *)(msg_ptr + NSE_REQUEST_MESSAGE_HEADER_TRANSACTION_CODE_OFFSET)) =
        hton16(message_header_transaction_code);
  }

  inline void SetMessageHeaderLogTime(int32_t const &message_header_logtime) {
    *((int32_t *)(msg_ptr + NSE_REQUEST_MESSAGE_HEADER_LOGTIME_OFFSET)) = hton32(message_header_logtime);
  }

  inline void SetMessageHeaderAlphaChar(char const *message_header_alpha_char) {
    memcpy((void *)(msg_ptr + NSE_REQUEST_MESSAGE_HEADER_ALPHACHAR_OFFSET), message_header_alpha_char,
           NSE_REQUEST_MESSAGE_HEADER_ALPHACHAR_LENGTH);
  }

  inline void SetMessageHeaderTraderId(int32_t const &message_header_trader_id) {
    *((int32_t *)(msg_ptr + NSE_REQUEST_MESSAGE_HEADER_TRADERID_OFFSET)) = hton32(message_header_trader_id);
  }

  inline void SetMessageHeaderErrorCode(int16_t const &message_header_error_code) {
    *((int16_t *)(msg_ptr + NSE_REQUEST_MESSAGE_HEADER_ERRORCODE_OFFSET)) = hton16(message_header_error_code);
  }

  // =================================== Order Entry Field Setter Functions

  inline void SetTokenNumber(int32_t const &token_number) {
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_TOKENNO_OFFSET)) = hton32(token_number);
  }

  inline void SetInstrumentDesc(char const *inst_desc) {
    memcpy((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_TOKENNO_OFFSET), inst_desc, sizeof(InstrumentDesc));
  }

  inline void SetContractDescInstrumentName(char const *instrument_name) {
    memcpy((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_INSTRUMENTNAME_OFFSET),
           instrument_name, NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_INSTRUMENTNAME_LENGTH);
  }

  inline void SetContractDescSymbol(char const *symbol) {
    memcpy((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_SYMBOL_OFFSET), symbol,
           NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_SYMBOL_LENGTH);
  }

  inline void SetContractDescExpiryDate(int32_t const &expiry) {
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_EXPIRYDATE_OFFSET)) = hton32(expiry);
  }

  inline void SetContractDescStrikePrice(int32_t const &strike) {
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_STRIKEPRICE_OFFSET)) = hton32(strike);
  }

  inline void SetContractDescOptionType(char const *option_type) {
    memcpy((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_OPTIONTYPE_OFFSET), option_type,
           NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_OPTIONTYPE_LENGTH);
  }

  inline void SetTokenNumber2(int32_t const &token_number) {
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_TOKENNO_OFFSET)) = hton32(token_number);
  }

  inline void SetInstrumentDesc2(char const *inst_desc) {
    memcpy((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_TOKENNO_OFFSET), inst_desc,
           sizeof(InstrumentDesc));
  }

  inline void SetContractDescInstrumentName2(char const *instrument_name) {
    memcpy((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_INSTRUMENTNAME_OFFSET),
           instrument_name, NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_INSTRUMENTNAME_LENGTH);
  }

  inline void SetContractDescSymbol2(char const *symbol) {
    memcpy((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_SYMBOL_OFFSET), symbol,
           NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_SYMBOL_LENGTH);
  }

  inline void SetContractDescExpiryDate2(int32_t const &expiry) {
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_EXPIRYDATE_OFFSET)) =
        hton32(expiry);
  }

  inline void SetContractDescStrikePrice2(int32_t const &strike) {
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_STRIKEPRICE_OFFSET)) =
        hton32(strike);
  }

  inline void SetContractDescOptionType2(char const *option_type) {
    memcpy((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_OPTIONTYPE_OFFSET),
           option_type, NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_OPTIONTYPE_LENGTH);
  }

  inline void SetBuySell(int16_t const &buy_sell, int16_t const &buy_sell_2) {
    *((int16_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_BUYSELLINDICATOR_OFFSET)) = hton16(buy_sell);
    *((int16_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_BUYSELLINDICATOR_OFFSET)) = hton16(buy_sell_2);
  }

  inline void SetVolume(int32_t const &volume, int32_t const &volume_2) {
    //        *( ( int32_t * ) ( msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_DISCLOSEDVOLUME_OFFSET) ) = hton32 ( volume ) ;
    //        *( ( int32_t * ) ( msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_DISCLOSEDVOLUMEREMAINING_OFFSET) ) = hton32 (
    //        volume ) ;
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_TOTALVOLUMEREMAINING_OFFSET)) = hton32(volume);
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_VOLUME_OFFSET)) = hton32(volume);

    //        *( ( int32_t * ) ( msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_DISCLOSEDVOLUME_OFFSET) ) = hton32
    //        ( volume ) ;
    //        *( ( int32_t * ) ( msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_DISCLOSEDVOLUMEREMAINING_OFFSET) )
    //        = hton32 ( volume ) ;
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_TOTALVOLUMEREMAINING_OFFSET)) = hton32(volume_2);
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_VOLUME_OFFSET)) = hton32(volume_2);
  }

  inline void SetPrice(int32_t const &price) {
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_PRICEDIFF_OFFSET)) = hton32(price);
  }

  inline void SetModified() {
    int16_t flag = 1;
    flag = (flag << 3);
    *((int16_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_STORDERFLAGS_STRUCT_OFFSET)) |= hton16(flag);
  }

  inline void SetBranchId(int16_t const &branch_id) {
    *((int16_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_BRNACHID_OFFSET)) = hton16(branch_id);
  }

  inline void SetTraderId(int32_t const &trader_id) {
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_TRADERID_OFFSET)) = hton32(trader_id);
  }

  inline void SetBrokerId(char const *broker_id) {
    memcpy((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_BROKERID_OFFSET), (void *)broker_id,
           NSE_SPREAD_ORDERENTRY_REQUEST_BROKERID_LENGTH);
  }

  inline void SetSaos(int32_t const &saos) {
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_FLLERFLAGS_1_TO_8_OFFSET)) = hton32(saos);
  }

  inline void SetNNF(double const &nnf) {  // 1-RL, 3-SL, 5-Odd Lot
    *((double *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_NFFIELD_OFFSET)) =
        (double)swap_endian((double)nnf);  // 00 56 BC 93 84 43 D9 42
  }

 public:
  inline void SetPreLoadedOrderEntryRequestFields(int32_t const &user_id, char const *broker_id, double const &nnf, int16_t const &branch_id) {
    SetMessageHeaderTraderId(user_id);
    SetBranchId(branch_id);
    SetTraderId(user_id);
    SetBrokerId(broker_id);
    SetNNF(nnf);
  }

  inline void SetDynamicOrderEntryRequestFields(int32_t const &packet_sequence_number, int32_t const &saos,
                                                int16_t const &buy_sell, int32_t const &volume, int32_t const &price,
                                                int16_t const &buy_sell_2, int32_t const &volume_2, bool is_modified,
                                                SpreadInstrumentDesc *spd_inst_desc) {
    SetInstrumentDesc(spd_inst_desc->GetSpreadInstrumentDescAsBuffer1());
    SetInstrumentDesc2(spd_inst_desc->GetSpreadInstrumentDescAsBuffer2());
    SetPacketSequenceNumber(packet_sequence_number);
    SetBuySell(buy_sell, buy_sell_2);
    SetVolume(volume, volume_2);
    SetPrice(price);
    SetSaos(saos);

    if (is_modified) {
      SetModified();
    }
    HFSAT::MD5::MD5((unsigned char *)(msg_ptr + NSE_REQUEST_MESSAGE_HEADER_TRANSACTION_CODE_OFFSET),
                    NSE_SPREAD_ORDERENTRY_REQUEST_LENGTH - NSE_PACKET_REQUEST_LENGTH,
                    (unsigned int *)(msg_ptr + NSE_PACKET_CHECKSUM_OFFSET));
  }

  char const *GetSpreadOrderEntryRequestBuffer() const { return order_entry_request_buffer; }
};

// =================================== Order Cancel =========================================================

class SpreadOrderCancelRequest {
 private:
  char order_cancel_request_buffer[NSE_SPREAD_ORDERENTRY_REQUEST_LENGTH];
  char const *msg_ptr;

 private:
  void InitializeStaticFields() {
    //================================= @ Packet

    // Total Length Of The Packet To Be Sent
    SetPacketLength(NSE_SPREAD_ORDERENTRY_REQUEST_LENGTH);

    // Reserved Sequence is always filled with 0
    //    SetPacketReservedSequenceNumber(0);

    // Message Count is 1 as we are only sending one order message
    //    SetPacketMessageCount(1);

    //================================= @ Message Header

    // Login Transaction Code
    SetMessageHeaderTransactionCode(SP_ORDER_CANCEL_IN);

    // LogTime Shoudl Be Set To 0 While Sending To Exch
    SetMessageHeaderLogTime(0);

    // Alphachar should be set to blank ( ' ' ) while sending to host
    SetMessageHeaderAlphaChar("  ");

    // ErrorCode Should be 0 While Sending To Exch
    SetMessageHeaderErrorCode(0);

    // All TimeStamp Fields Should Be Set To Numeric 0 While Sending To Exch
    memset((void *)(msg_ptr + NSE_REQUEST_MESSAGE_HEADER_TIMESTAMP_OFFSET), 0,
           NSE_REQUEST_MESSAGE_HEADER_TIMESTAMP_LENGTH + NSE_REQUEST_MESSAGE_HEADER_TIMESTAMP1_LENGTH +
               NSE_REQUEST_MESSAGE_HEADER_TIMESTAMP2_LENGTH);

    // Length of the message header and the following order entry request, hence packet length has been deducted
    *((int16_t *)(msg_ptr + NSE_REQUEST_MESSAGE_HEADER_MESSAGELENGTH_OFFSET)) =
        hton16(NSE_SPREAD_ORDERENTRY_REQUEST_LENGTH - NSE_PACKET_REQUEST_LENGTH);

    // ================================ @ Order Cancel

    //   *( ( char * ) ( msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_PARTCIPANTTYPE_OFFSET ) ) = 'C' ;
    *((char *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MODIFIED_OR_CANCELLED_BY_FLAG_OFFSET)) = 'T';
    //*( ( int32_t * ) ( msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_STRIKEPRICE_OFFSET ) ) = hton32 (
    //-1 ) ;
    //        memset((void *) (msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_OPTIONTYPE_OFFSET),
    //                                'X',
    //                                NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_OPTIONTYPE_LENGTH
    //                                );
    *((int16_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_CALEVEL_OFFSET)) = hton16(0);
    *((int16_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_CALEVEL_OFFSET)) =
        hton16(0);
    memset((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_OPBROKERID_OFFSET), ' ',
           NSE_SPREAD_ORDERENTRY_REQUEST_OPBROKERID_LENGTH);
    memset((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_OPBROKERID_OFFSET), ' ',
           NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_OPBROKERID_LENGTH);
    //        *( ( char * ) ( msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_CLOSEOUTFLAG_OFFSET ) ) = ' ' ;
    memset((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_ORDERTYPE_OFFSET), ' ',
           NSE_SPREAD_ORDERENTRY_REQUEST_ORDERTYPE_LENGTH);
    memset((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_ORDERNUMBER_OFFSET), ' ',
           NSE_SPREAD_ORDERENTRY_REQUEST_ORDERNUMBER_LENGTH);
    memset((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_ACCOUNTNUMBER_OFFSET), ' ',
           NSE_SPREAD_ORDERENTRY_REQUEST_ACCOUNTNUMBER_LENGTH);
    //        memset((void *) (msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_VOLUMEFILLEDTODAY_OFFSET),
    //                        ' ',
    //                        NSE_SPREAD_ORDERENTRY_REQUEST_VOLUMEFILLEDTODAY_LENGTH
    //                        );
    //        memset((void *) (msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_VOLUMEFILLEDTODAY_OFFSET),
    //                        ' ',
    //                        NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_VOLUMEFILLEDTODAY_LENGTH
    //                        );
    *((int16_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_BOOKTYPE_OFFSET)) = hton16(1);  // regular order
    *((int16_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_STORDERFLAGS_STRUCT_OFFSET)) =
        hton16((int16_t)(1 << 11));  // day order
    *((int16_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_STORDERFLAGS_STRUCT_OFFSET)) =
        hton16((int16_t)(1 << 11));  // day order
    // *((int16_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_BRNACHID_OFFSET)) = hton16(1);
    memset((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_CORDFILLER_OFFSET), ' ',
           NSE_SPREAD_ORDERENTRY_REQUEST_CORDFILLER_LENGTH);
    *((char *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_OPENCLOSE_OFFSET)) = 'O';
    *((char *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_OPENCLOSE_OFFSET)) = 'O';
    memset((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_SETTLOR_OFFSET), ' ',
           NSE_SPREAD_ORDERENTRY_REQUEST_SETTLOR_LENGTH);
    *((int16_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_PROCLIENTINDICATOR_OFFSET)) = hton16(2);
    *((int16_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_SETTLEMENTPERIOD_OFFSET)) = hton16(10);
    *((int8_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_ADDITIONALORDERFLAGS_STRUCT_OFFSET)) = (int8_t)(1 << 1);  // 0
    *((int8_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_ADDITIONALORDERFLAGS_STRUCT_OFFSET)) =
        (int8_t)18;  // 00010010 ( BITS: 000 1 (Self Trade) 00 1 (COD) 0 )
    //        *( ( char * ) ( msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_GIVENUPFLAG_OFFSET) ) = 'P' ;
    //        *( ( char * ) ( msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_FLLERFLAGS_17_OFFSET ) ) = ' ' ;
    //        *( ( char * ) ( msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_FLLERFLAGS_18_OFFSET ) ) = ' ' ;
    *((double *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_NFFIELD_OFFSET)) =
        (double)swap_endian((double)111111111111000);  // 00 56 BC 93 84 43 D9 42
  }

 public:
  SpreadOrderCancelRequest() : msg_ptr(order_cancel_request_buffer + NSE_REQUEST_START_OFFSET) {
    // Initialize OrderEntry Request Buffer
    memset((void *)order_cancel_request_buffer, 0, NSE_SPREAD_ORDERENTRY_REQUEST_LENGTH);

    // Initialize The Static Fields
    InitializeStaticFields();
  }

 private:
  inline void SetPacketLength(int16_t const &packet_length) {
    *((int16_t *)(msg_ptr + NSE_PACKET_LENGTH_OFFSET)) = hton16(packet_length);
  }

  inline void SetPacketSequenceNumber(int32_t const &packet_sequence_number) {
    *((int32_t *)(msg_ptr + NSE_PACKET_SEQUENCE_OFFSET)) = hton32(packet_sequence_number);
  }

  //  inline void SetPacketReservedSequenceNumber(int16_t const &packet_reserved_sequence_number) {
  //    *((int16_t *)(msg_ptr + NSE_PACKET_RESERVED_SEQUENCE_NUMBER_OFFSET)) = hton16(packet_reserved_sequence_number);
  //  }

  inline void SetPacketMD5CheckSum(char const *packet_md5sum_checksum) {
    memcpy((void *)(msg_ptr + NSE_PACKET_CHECKSUM_OFFSET), packet_md5sum_checksum, NSE_PACKET_CHECKSUM_LENGTH);
  }

  //  inline void SetPacketMessageCount(int16_t const &packet_message_count) {
  //    *((int16_t *)(msg_ptr + NSE_PACKET_MESSAGE_COUNT_OFFSET)) = hton16(packet_message_count);
  //  }

  inline void SetMessageHeaderTransactionCode(int16_t const &message_header_transaction_code) {
    *((int16_t *)(msg_ptr + NSE_REQUEST_MESSAGE_HEADER_TRANSACTION_CODE_OFFSET)) =
        hton16(message_header_transaction_code);
  }

  inline void SetMessageHeaderLogTime(int32_t const &message_header_logtime) {
    *((int32_t *)(msg_ptr + NSE_REQUEST_MESSAGE_HEADER_LOGTIME_OFFSET)) = hton32(message_header_logtime);
  }

  inline void SetMessageHeaderAlphaChar(char const *message_header_alpha_char) {
    memcpy((void *)(msg_ptr + NSE_REQUEST_MESSAGE_HEADER_ALPHACHAR_OFFSET), message_header_alpha_char,
           NSE_REQUEST_MESSAGE_HEADER_ALPHACHAR_LENGTH);
  }

  inline void SetMessageHeaderTraderId(int32_t const &message_header_trader_id) {
    *((int32_t *)(msg_ptr + NSE_REQUEST_MESSAGE_HEADER_TRADERID_OFFSET)) = hton32(message_header_trader_id);
  }

  inline void SetMessageHeaderErrorCode(int16_t const &message_header_error_code) {
    *((int16_t *)(msg_ptr + NSE_REQUEST_MESSAGE_HEADER_ERRORCODE_OFFSET)) = hton16(message_header_error_code);
  }

  // =================================== Order Entry Field Setter Functions

  inline void SetTokenNumber(int32_t const &token_number) {
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_TOKENNO_OFFSET)) = hton32(token_number);
  }

  inline void SetInstrumentDesc(char const *inst_desc) {
    memcpy((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_TOKENNO_OFFSET), inst_desc, sizeof(InstrumentDesc));
  }

  inline void SetContractDescInstrumentName(char const *instrument_name) {
    memcpy((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_INSTRUMENTNAME_OFFSET),
           instrument_name, NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_INSTRUMENTNAME_LENGTH);
  }

  inline void SetContractDescSymbol(char const *symbol) {
    memcpy((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_SYMBOL_OFFSET), symbol,
           NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_SYMBOL_LENGTH);
  }

  inline void SetContractDescExpiryDate(int32_t const &expiry) {
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_EXPIRYDATE_OFFSET)) = hton32(expiry);
  }

  inline void SetContractDescStrikePrice(int32_t const &strike) {
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_STRIKEPRICE_OFFSET)) = hton32(strike);
  }

  inline void SetContractDescOptionType(char const *option_type) {
    memcpy((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_OPTIONTYPE_OFFSET), option_type,
           NSE_SPREAD_ORDERENTRY_REQUEST_CONTRACT_DESC_STRUCT_OPTIONTYPE_LENGTH);
  }

  inline void SetTokenNumber2(int32_t const &token_number) {
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_TOKENNO_OFFSET)) = hton32(token_number);
  }

  inline void SetInstrumentDesc2(char const *inst_desc) {
    memcpy((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_TOKENNO_OFFSET), inst_desc,
           sizeof(InstrumentDesc));
  }

  inline void SetContractDescInstrumentName2(char const *instrument_name) {
    memcpy((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_INSTRUMENTNAME_OFFSET),
           instrument_name, NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_INSTRUMENTNAME_LENGTH);
  }

  inline void SetContractDescSymbol2(char const *symbol) {
    memcpy((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_SYMBOL_OFFSET), symbol,
           NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_SYMBOL_LENGTH);
  }

  inline void SetContractDescExpiryDate2(int32_t const &expiry) {
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_EXPIRYDATE_OFFSET)) =
        hton32(expiry);
  }

  inline void SetContractDescStrikePrice2(int32_t const &strike) {
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_STRIKEPRICE_OFFSET)) =
        hton32(strike);
  }

  inline void SetContractDescOptionType2(char const *option_type) {
    memcpy((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_OPTIONTYPE_OFFSET),
           option_type, NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_CONTRACT_DESC_STRUCT_OPTIONTYPE_LENGTH);
  }

  inline void SetBuySell(int16_t const &buy_sell, int16_t const &buy_sell_2) {
    *((int16_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_BUYSELLINDICATOR_OFFSET)) = hton16(buy_sell);
    *((int16_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_BUYSELLINDICATOR_OFFSET)) = hton16(buy_sell_2);
  }

  inline void SetVolume(int32_t const &volume, int32_t const &volume_2) {
    //        *( ( int32_t * ) ( msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_DISCLOSEDVOLUME_OFFSET) ) = hton32 ( volume ) ;
    //        *( ( int32_t * ) ( msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_DISCLOSEDVOLUMEREMAINING_OFFSET) ) = hton32 (
    //        volume ) ;
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_TOTALVOLUMEREMAINING_OFFSET)) = hton32(volume);
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_VOLUME_OFFSET)) = hton32(volume);

    //        *( ( int32_t * ) ( msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_DISCLOSEDVOLUME_OFFSET) ) = hton32
    //        ( volume ) ;
    //        *( ( int32_t * ) ( msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_DISCLOSEDVOLUMEREMAINING_OFFSET) )
    //        = hton32 ( volume ) ;
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_TOTALVOLUMEREMAINING_OFFSET)) = hton32(volume_2);
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_MS_SPD_LEG_2_VOLUME_OFFSET)) = hton32(volume_2);
  }

  inline void SetPrice(int32_t const &price) {
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_PRICEDIFF_OFFSET)) = hton32(price);
  }

  inline void SetModified() {
    int16_t flag = 1;
    flag = (flag << 3);
    *((int16_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_STORDERFLAGS_STRUCT_OFFSET)) |= hton16(flag);
  }

  inline void RemoveModified() {
    int16_t flag = 1;
    flag = (flag << 3);
    *((int16_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_STORDERFLAGS_STRUCT_OFFSET)) ^= hton16(flag);
  }

  inline void SetTraderId(int32_t const &trader_id) {
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_TRADERID_OFFSET)) = hton32(trader_id);
  }

  inline void SetBrokerId(char const *broker_id) {
    memcpy((void *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_BROKERID_OFFSET), (void *)broker_id,
           NSE_SPREAD_ORDERENTRY_REQUEST_BROKERID_LENGTH);
  }

  inline void SetBranchId(int16_t const &branch_id) {
    *((int16_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_BRNACHID_OFFSET)) = hton16(branch_id);
  }

  inline void SetSaos(int32_t const &saos) {
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_FLLERFLAGS_1_TO_8_OFFSET)) = hton32(saos);
  }

  inline void SetEntryDateTime(int32_t const &entry_date) {
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_ENTRYDATETIME_OFFSET)) = hton32(entry_date);
  }

  inline void SetLastModifiedDateTime(int32_t const &modified_date) {
    *((int32_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_LASTMODIFIED_OFFSET)) = hton32(modified_date);
  }

  inline void SetOrderNumber(int64_t const &order_num) {
    *((int64_t *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_ORDERNUMBER_OFFSET)) = (int64_t)ntoh64(order_num);
  }

  inline void SetNNF(double const &nnf) {  // 1-RL, 3-SL, 5-Odd Lot
    *((double *)(msg_ptr + NSE_SPREAD_ORDERENTRY_REQUEST_NFFIELD_OFFSET)) =
        (double)swap_endian((double)nnf);  // 00 56 BC 93 84 43 D9 42
  }

 public:
  inline void SetPreLoadedOrderEntryRequestFields(int32_t const &user_id, char const *broker_id, double const &nnf, int16_t const &branch_id) {
    SetMessageHeaderTraderId(user_id);
    SetBranchId(branch_id);
    SetTraderId(user_id);
    SetBrokerId(broker_id);
    SetNNF(nnf);
  }

  inline void SetDynamicOrderEntryRequestFields(int32_t const &packet_sequence_number, int32_t const &saos,
                                                int64_t const &order_num, int32_t const &entry_date,
                                                int32_t const &last_date, int16_t const &buy_sell,
                                                int32_t const &volume, int32_t const &price, int16_t const &buy_sell_2,
                                                int32_t const &volume_2, bool is_modified,
                                                SpreadInstrumentDesc *spd_inst_desc) {
    SetInstrumentDesc(spd_inst_desc->GetSpreadInstrumentDescAsBuffer1());
    SetInstrumentDesc2(spd_inst_desc->GetSpreadInstrumentDescAsBuffer2());
    SetPacketSequenceNumber(packet_sequence_number);
    SetBuySell(buy_sell, buy_sell_2);
    SetVolume(volume, volume_2);
    SetPrice(price);
    SetSaos(saos);

    SetOrderNumber(order_num);
    SetEntryDateTime(entry_date);
    SetLastModifiedDateTime(last_date);

    if (is_modified) {
      SetModified();
      SetMessageHeaderTransactionCode(SP_ORDER_MOD_IN);
    } else {
      RemoveModified();
      SetMessageHeaderTransactionCode(SP_ORDER_CANCEL_IN);
    }
    HFSAT::MD5::MD5((unsigned char *)(msg_ptr + NSE_REQUEST_MESSAGE_HEADER_TRANSACTION_CODE_OFFSET),
                    NSE_SPREAD_ORDERENTRY_REQUEST_LENGTH - NSE_PACKET_REQUEST_LENGTH,
                    (unsigned int *)(msg_ptr + NSE_PACKET_CHECKSUM_OFFSET));
  }

  char const *GetSpreadOrderCancelRequestBuffer() const { return order_cancel_request_buffer; }
};
}
}
